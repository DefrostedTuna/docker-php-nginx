name: Build Containers

on:
  push:
    branches:
      - master

jobs:
  build-php-73:
    name: PHP 7.3
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Authenticate with Docker Registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Add QEMU Support
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Create Builder
        run: |
          docker buildx create \
          --use \
          --bootstrap \
          --driver docker-container \
          --driver-opt network=host \
          --name lordran \
          --node lordran \
          --platform linux/amd64,linux/arm64

      - name: Build Main Container
      - run: |
          docker buildx build \
          --no-cache \
          --push \
          -t defrostedtuna/php-nginx:7.3 . \
          -f php-7.3/Dockerfile \
          --platform linux/amd64,linux/arm64

      - name: Build Dev Container
      - run: |
          docker buildx build \
          --no-cache \
          --push \
          -t defrostedtuna/php-nginx:7.3-dev . \
          -f php-7.3/dev.Dockerfile \
          --platform linux/amd64,linux/arm64

  build-php-74:
    name: PHP 7.4
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Authenticate with Docker Registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Add QEMU Support
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Create Builder
        run: |
          docker buildx create \
          --use \
          --bootstrap \
          --driver docker-container \
          --driver-opt network=host \
          --name lordran \
          --node lordran \
          --platform linux/amd64,linux/arm64

      - name: Build Main Container
      - run: |
          docker buildx build \
          --no-cache \
          --push \
          -t defrostedtuna/php-nginx:7.4 . \
          -f php-7.4/Dockerfile \
          --platform linux/amd64,linux/arm64

      - name: Build Dev Container
      - run: |
          docker buildx build \
          --no-cache \
          --push \
          -t defrostedtuna/php-nginx:7.4-dev . \
          -f php-7.4/dev.Dockerfile \
          --platform linux/amd64,linux/arm64

  build-php-80:
    name: PHP 8.0
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Authenticate with Docker Registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Add QEMU Support
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Create Builder
        run: |
          docker buildx create \
          --use \
          --bootstrap \
          --driver docker-container \
          --driver-opt network=host \
          --name lordran \
          --node lordran \
          --platform linux/amd64,linux/arm64

      - name: Build Main Container
      - run: |
          docker buildx build \
          --no-cache \
          --push \
          -t defrostedtuna/php-nginx:8.0 . \
          -f php-8.0/Dockerfile \
          --platform linux/amd64,linux/arm64

      - name: Build Dev Container
      - run: |
          docker buildx build \
          --no-cache \
          --push \
          -t defrostedtuna/php-nginx:8.0-dev . \
          -f php-8.0/dev.Dockerfile \
          --platform linux/amd64,linux/arm64